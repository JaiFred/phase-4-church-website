{"ast":null,"code":"var _jsxFileName = \"/Users/jaivonfrederick/Development/code/phase-4/phase-4-church-website/frontEnd/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(_ref) {\n  _s();\n\n  let {\n    onLogin,\n    setCurrentMember\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function HandleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(member => setCurrentMember(member.id));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n        errorSpace = /*#__PURE__*/_jsxDEV(Error, {\n          children: errors\n        }, errors, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this);\n        errorSpace.forceUpdate();\n      }\n    });\n  }\n\n  console.log({\n    errors\n  });\n  console.log(member.id);\n\n  let errorSpace = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 20\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: HandleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"fill\",\n        color: \"primary\",\n        type: \"submit\",\n        children: isLoading ? \"Loading...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: errorSpace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} //console.log(errors) - this results in a string of errors we need to know if we want to produce an array of errors or a single error\n\n\n_s(LoginForm, \"0Ji54UNEhlpZjS5ukXWSjG/LLP8=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Button","Error","Input","FormField","Label","LoginForm","onLogin","setCurrentMember","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","HandleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","member","id","err","errorSpace","forceUpdate","console","log","target","value"],"sources":["/Users/jaivonfrederick/Development/code/phase-4/phase-4-church-website/frontEnd/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"./styles\";\n\nfunction LoginForm({ onLogin, setCurrentMember }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  \n\n  function HandleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((member) => setCurrentMember(member.id));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n        errorSpace = <Error key={errors}>{errors}</Error>\n        \n        errorSpace.forceUpdate()\n      }\n    });\n  }\n  console.log({errors})\n  console.log(member.id)\n  let errorSpace = <div></div>;\n\n  return (\n    <form onSubmit={HandleSubmit}>\n      <div>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errorSpace}\n      </FormField>\n    </form>\n  );\n}\n\n//console.log(errors) - this results in a string of errors we need to know if we want to produce an array of errors or a single error\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}