{"ast":null,"code":"// import React, { useState } from 'react'\n// import { Link } from 'react-router-dom'\n// import CloudinaryUpload from './CloudinaryUpload'\n// function EventsList({ events, groups, removeRsvpToEvent, cancelEvent, rsvpToEvent, createEvent }) {\n//   const now = new Date();\n//   now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n//   const [title, setTitle] = useState('')\n//   const [description, setDescription] = useState('')\n//   const [location, setLocation] = useState('')\n//   const [startTime, setStartTime] = useState(now.toISOString().slice(0, 16))\n//   const [endTime, setEndTime] = useState('')\n//   const [groupName, setGroupName] = useState('')\n//   const [posterUrl, setPosterUrl] = useState('')\n//   const rsvpOrCancelButton = (event) => {\n//     if (event.rsvp) {\n//       return <button className=\"px-4 py-1 bg-red-400 text-white\" onClick={() => removeRsvpToEvent(event.id)}>Cancel RSVP</button>\n//     } else {\n//       return <button className=\"px-4 py-1 bg-green-500 text-white\" onClick={() => rsvpToEvent(event.id)}>RSVP for event</button>\n//     }\n//   }\n//   const cancelEventButton = (event) => {\n//     if (event.user_can_modify) {\n//       return <button className=\"px-4 py-1 bg-red-400 text-white\" onClick={() => cancelEvent(event.id)}>Cancel Event</button>\n//     }\n//   }\n//   const handleSubmit = (e) => {\n//     e.preventDefault()\n//     createEvent({\n//       title,\n//       description,\n//       location,\n//       start_time: startTime,\n//       end_time: endTime,\n//       group_name: groupName,\n//       poster_image_url: posterUrl\n//     })\n//     setTitle('')\n//     setDescription('')\n//     setLocation('')\n//     setStartTime('')\n//     setEndTime('')\n//     setGroupName('')\n//     setPosterUrl('')\n//   }\n//   const handlePosterUpload = (result) => {\n//     setPosterUrl(result.info.secure_url)\n//   }\n//   const posterPreview = () => {\n//     if (posterUrl) {\n//       return (\n//         <img\n//           src={posterUrl}\n//           className=\"w-28 h-28 object-fill\"\n//           alt={title}\n//         />\n//       )\n//     }\n//   }\n//   return (\n//     <div>\n//       <h1 className=\"text-3xl my-4 font-bold\">Events</h1>\n//       <div className=\"space-y-4 my-4\">\n//         {events.map(event => (\n//           <p\n//             className=\"flex justify-between items-center\">\n//             <Link to={`events/${event.id}`}>\n//               {event.poster_image_url && <img src={event.poster_image_url} alt={event.title} className=\"w-28 h-28 object-fill\" />}\n//               {event.title}\n//             </Link>\n//             <span>{rsvpOrCancelButton(event)} {cancelEventButton(event)}</span>\n//           </p>\n//         ))}\n//       </div>\n//       <h3 className=\"text-xl mt-8 font-bold\">Add Event</h3>\n//       <form className=\"my-4 space-y-4\" onSubmit={handleSubmit}>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"title\">Title </label>\n//           <input\n//             type=\"text\"\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             name=\"title\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"description\"> Description </label>\n//           <textarea\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             name=\"description\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"name\"> Location </label>\n//           <input\n//             type=\"text\"\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             name=\"location\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"start_time\"> Start Time </label>\n//           <input\n//             type=\"datetime-local\"\n//             value={startTime}\n//             onChange={(e) => setStartTime(e.target.value)}\n//             name=\"start_time\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"end_time\"> End Time </label>\n//           <input\n//             type=\"datetime-local\"\n//             value={endTime}\n//             onChange={(e) => setEndTime(e.target.value)}\n//             name=\"end_time\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlfor=\"group_name\">Group Name </label>\n//           <input\n//             type=\"text\"\n//             name=\"group_name\"\n//             value={groupName}\n//             list=\"groups\"\n//             onChange={(e) => setGroupName(e.target.value)}\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//           <datalist id=\"groups\">\n//             {groups.map(group => <option>{group.name}</option>)}\n//           </datalist>\n//         </p>\n//         <p>\n//           {posterPreview()}\n//           <CloudinaryUpload\n//             preset=\"rrsszoxs\"\n//             buttonText=\"Add Event Poster\"\n//             handleUpload={handlePosterUpload}\n//           />\n//         </p>\n//         <p>\n//           <button className=\"block bg-green-500 w-full py-2 mt-8\" type=\"submit\">Add Event</button>\n//         </p>\n//       </form>\n//     </div>\n//   )\n// }\n// export default EventsList","map":{"version":3,"names":[],"sources":["/Users/jaivonfrederick/Development/code/phase-4/phase-4-church-website/frontEnd/src/components/EventsList.js"],"sourcesContent":["// import React, { useState } from 'react'\n// import { Link } from 'react-router-dom'\n// import CloudinaryUpload from './CloudinaryUpload'\n\n// function EventsList({ events, groups, removeRsvpToEvent, cancelEvent, rsvpToEvent, createEvent }) {\n//   const now = new Date();\n//   now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n//   const [title, setTitle] = useState('')\n//   const [description, setDescription] = useState('')\n//   const [location, setLocation] = useState('')\n//   const [startTime, setStartTime] = useState(now.toISOString().slice(0, 16))\n//   const [endTime, setEndTime] = useState('')\n//   const [groupName, setGroupName] = useState('')\n//   const [posterUrl, setPosterUrl] = useState('')\n\n\n\n//   const rsvpOrCancelButton = (event) => {\n//     if (event.rsvp) {\n//       return <button className=\"px-4 py-1 bg-red-400 text-white\" onClick={() => removeRsvpToEvent(event.id)}>Cancel RSVP</button>\n//     } else {\n//       return <button className=\"px-4 py-1 bg-green-500 text-white\" onClick={() => rsvpToEvent(event.id)}>RSVP for event</button>\n//     }\n//   }\n\n//   const cancelEventButton = (event) => {\n//     if (event.user_can_modify) {\n//       return <button className=\"px-4 py-1 bg-red-400 text-white\" onClick={() => cancelEvent(event.id)}>Cancel Event</button>\n//     }\n//   }\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault()\n//     createEvent({\n//       title,\n//       description,\n//       location,\n//       start_time: startTime,\n//       end_time: endTime,\n//       group_name: groupName,\n//       poster_image_url: posterUrl\n//     })\n//     setTitle('')\n//     setDescription('')\n//     setLocation('')\n//     setStartTime('')\n//     setEndTime('')\n//     setGroupName('')\n//     setPosterUrl('')\n//   }\n\n//   const handlePosterUpload = (result) => {\n//     setPosterUrl(result.info.secure_url)\n//   }\n\n//   const posterPreview = () => {\n//     if (posterUrl) {\n//       return (\n//         <img\n//           src={posterUrl}\n//           className=\"w-28 h-28 object-fill\"\n//           alt={title}\n//         />\n//       )\n//     }\n//   }\n  \n//   return (\n//     <div>\n//       <h1 className=\"text-3xl my-4 font-bold\">Events</h1>\n//       <div className=\"space-y-4 my-4\">\n//         {events.map(event => (\n//           <p\n//             className=\"flex justify-between items-center\">\n//             <Link to={`events/${event.id}`}>\n//               {event.poster_image_url && <img src={event.poster_image_url} alt={event.title} className=\"w-28 h-28 object-fill\" />}\n//               {event.title}\n//             </Link>\n//             <span>{rsvpOrCancelButton(event)} {cancelEventButton(event)}</span>\n//           </p>\n//         ))}\n//       </div>\n//       <h3 className=\"text-xl mt-8 font-bold\">Add Event</h3>\n//       <form className=\"my-4 space-y-4\" onSubmit={handleSubmit}>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"title\">Title </label>\n//           <input\n//             type=\"text\"\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             name=\"title\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"description\"> Description </label>\n//           <textarea\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             name=\"description\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"name\"> Location </label>\n//           <input\n//             type=\"text\"\n//             value={location}\n//             onChange={(e) => setLocation(e.target.value)}\n//             name=\"location\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"start_time\"> Start Time </label>\n//           <input\n//             type=\"datetime-local\"\n//             value={startTime}\n//             onChange={(e) => setStartTime(e.target.value)}\n//             name=\"start_time\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlFor=\"end_time\"> End Time </label>\n//           <input\n//             type=\"datetime-local\"\n//             value={endTime}\n//             onChange={(e) => setEndTime(e.target.value)}\n//             name=\"end_time\"\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//         </p>\n//         <p className=\"flex items-center\">\n//           <label className=\"w-28 inline-block\" htmlfor=\"group_name\">Group Name </label>\n//           <input\n//             type=\"text\"\n//             name=\"group_name\"\n//             value={groupName}\n//             list=\"groups\"\n//             onChange={(e) => setGroupName(e.target.value)}\n//             className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n//           />\n//           <datalist id=\"groups\">\n//             {groups.map(group => <option>{group.name}</option>)}\n//           </datalist>\n//         </p>\n//         <p>\n//           {posterPreview()}\n//           <CloudinaryUpload\n//             preset=\"rrsszoxs\"\n//             buttonText=\"Add Event Poster\"\n//             handleUpload={handlePosterUpload}\n//           />\n//         </p>\n//         <p>\n//           <button className=\"block bg-green-500 w-full py-2 mt-8\" type=\"submit\">Add Event</button>\n//         </p>\n//       </form>\n//     </div>\n//   )\n// }\n\n// export default EventsList"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}