{"ast":null,"code":"var _jsxFileName = \"/home/braisinbran/Development/code/phase4/phase-4-church-website/frontEnd/src/components/CloudinaryUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CloudinaryUpload(_ref) {\n  _s();\n\n  let {\n    preset,\n    handleUpload,\n    buttonText\n  } = _ref;\n\n  const generateId = () => {\n    const ending = buttonText.split(' ').map(w => w.toLowerCase()).join('_');\n    return `upload_widget_${ending}`;\n  };\n\n  useEffect(() => {\n    window.myWidget = window.cloudinary.createUploadWidget({\n      cloudName: \"dpkrqs9rs\",\n      uploadPreset: preset,\n      prepareUploadParams: (cb, params) => {\n        params = [].concat(params); //params can be a single object or an array of objects\n\n        Promise.all(params.map(body => {\n          return fetch(\"/uploads/prepare\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n          }).then(res => res.json());\n        })).then(results => cb(results.length === 1 ? results[0] : results));\n      }\n    }, (error, result) => {\n      if (!error && result && result.event === \"success\") {\n        console.log(\"Done! Here is the image info: \", result.info);\n        handleUpload && handleUpload(result);\n        window.myWidget.close();\n      }\n    });\n    document.getElementById(generateId()).addEventListener(\"click\", function () {\n      window.myWidget.open();\n    }, false);\n  }, [preset, handleUpload]);\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"#\",\n    id: generateId(),\n    children: buttonText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CloudinaryUpload, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CloudinaryUpload;\nexport default CloudinaryUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"CloudinaryUpload\");","map":{"version":3,"names":["React","useEffect","CloudinaryUpload","preset","handleUpload","buttonText","generateId","ending","split","map","w","toLowerCase","join","window","myWidget","cloudinary","createUploadWidget","cloudName","uploadPreset","prepareUploadParams","cb","params","concat","Promise","all","body","fetch","method","headers","JSON","stringify","then","res","json","results","length","error","result","event","console","log","info","close","document","getElementById","addEventListener","open"],"sources":["/home/braisinbran/Development/code/phase4/phase-4-church-website/frontEnd/src/components/CloudinaryUpload.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nfunction CloudinaryUpload({\n  preset,\n  handleUpload,\n  buttonText\n}) {\n\n  const generateId = () => {\n    const ending = buttonText.split(' ').map(w => w.toLowerCase()).join('_')\n    return `upload_widget_${ending}`\n  }\n  useEffect(() => {\n    window.myWidget = window.cloudinary.createUploadWidget(\n      {\n        cloudName: \"dpkrqs9rs\",\n        uploadPreset: preset,\n        prepareUploadParams: (cb, params) => {\n          params = [].concat(params);  //params can be a single object or an array of objects\n          Promise.all(params.map((body) => {\n            return fetch(\"/uploads/prepare\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(body)\n            })\n              .then(res => res.json())\n          }))\n            .then((results) =>\n              cb(results.length === 1 ? results[0] : results)\n            );\n        }\n      },\n      (error, result) => {\n        if (!error && result && result.event === \"success\") {\n          console.log(\"Done! Here is the image info: \", result.info);\n          handleUpload && handleUpload(result);\n          window.myWidget.close();\n        }\n      }\n    );\n    document.getElementById(generateId()).addEventListener(\n      \"click\",\n      function () {\n        window.myWidget.open();\n      },\n      false\n    );\n  }, [preset, handleUpload]);\n\n  return (\n    <a href=\"#\" id={generateId()}>\n      {buttonText}\n    </a>\n  );\n}\n\nexport default CloudinaryUpload;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,gBAAT,OAIG;EAAA;;EAAA,IAJuB;IACxBC,MADwB;IAExBC,YAFwB;IAGxBC;EAHwB,CAIvB;;EAED,MAAMC,UAAU,GAAG,MAAM;IACvB,MAAMC,MAAM,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,EAAsBC,GAAtB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,WAAF,EAA/B,EAAgDC,IAAhD,CAAqD,GAArD,CAAf;IACA,OAAQ,iBAAgBL,MAAO,EAA/B;EACD,CAHD;;EAIAN,SAAS,CAAC,MAAM;IACdY,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACE,UAAP,CAAkBC,kBAAlB,CAChB;MACEC,SAAS,EAAE,WADb;MAEEC,YAAY,EAAEf,MAFhB;MAGEgB,mBAAmB,EAAE,CAACC,EAAD,EAAKC,MAAL,KAAgB;QACnCA,MAAM,GAAG,GAAGC,MAAH,CAAUD,MAAV,CAAT,CADmC,CACN;;QAC7BE,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACZ,GAAP,CAAYgB,IAAD,IAAU;UAC/B,OAAOC,KAAK,CAAC,kBAAD,EAAqB;YAC/BC,MAAM,EAAE,MADuB;YAE/BC,OAAO,EAAE;cACP,gBAAgB;YADT,CAFsB;YAK/BH,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;UALyB,CAArB,CAAL,CAOJM,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,CAAP;QAQD,CATW,CAAZ,EAUGF,IAVH,CAUSG,OAAD,IACJd,EAAE,CAACc,OAAO,CAACC,MAAR,KAAmB,CAAnB,GAAuBD,OAAO,CAAC,CAAD,CAA9B,GAAoCA,OAArC,CAXN;MAaD;IAlBH,CADgB,EAqBhB,CAACE,KAAD,EAAQC,MAAR,KAAmB;MACjB,IAAI,CAACD,KAAD,IAAUC,MAAV,IAAoBA,MAAM,CAACC,KAAP,KAAiB,SAAzC,EAAoD;QAClDC,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CH,MAAM,CAACI,IAArD;QACArC,YAAY,IAAIA,YAAY,CAACiC,MAAD,CAA5B;QACAxB,MAAM,CAACC,QAAP,CAAgB4B,KAAhB;MACD;IACF,CA3Be,CAAlB;IA6BAC,QAAQ,CAACC,cAAT,CAAwBtC,UAAU,EAAlC,EAAsCuC,gBAAtC,CACE,OADF,EAEE,YAAY;MACVhC,MAAM,CAACC,QAAP,CAAgBgC,IAAhB;IACD,CAJH,EAKE,KALF;EAOD,CArCQ,EAqCN,CAAC3C,MAAD,EAASC,YAAT,CArCM,CAAT;EAuCA,oBACE;IAAG,IAAI,EAAC,GAAR;IAAY,EAAE,EAAEE,UAAU,EAA1B;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAtDQH,gB;;KAAAA,gB;AAwDT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}