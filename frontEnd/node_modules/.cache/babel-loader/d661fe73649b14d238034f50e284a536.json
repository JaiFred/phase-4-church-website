{"ast":null,"code":"var _jsxFileName = \"/home/braisinbran/Development/code/phase4/phase-4-church-website/frontEnd/src/components/EventsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport EventsList from './EventsList';\nimport EventDetail from './EventDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventsContainer() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [groups, setGroups] = useState([]);\n  useEffect(() => {\n    fetch(`/events`, {\n      credentials: 'include'\n    }).then(res => res.json()).then(events => setEvents(events));\n    fetch(`/groups`, {\n      credentials: 'include'\n    }).then(res => res.json()).then(groups => setGroups(groups));\n  }, []);\n\n  const removeRsvpToEvent = eventId => {\n    const event = events.find(event => event.id === eventId);\n    return fetch(`/rsvps/${event.rsvp.id}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    }).then(res => {\n      if (res.ok) {\n        // if the event is the one we just removed an rsvp \n        // for, set its rsvp property in state to \n        // undefined; If not, leave the event as it is\n        const updatedEvents = events.map(event => {\n          if (event.id === eventId) {\n            return { ...event,\n              rsvp: undefined\n            };\n          } else {\n            return event;\n          }\n        });\n        setEvents(updatedEvents);\n      }\n    });\n  };\n\n  const cancelEvent = eventId => {\n    return fetch(`/events/${eventId}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    }).then(res => {\n      if (res.ok) {\n        const updatedEvents = events.filter(event => event.id !== eventId);\n        setEvents(updatedEvents);\n      }\n    });\n  };\n\n  const rsvpToEvent = eventId => {\n    return fetch('/rsvps', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        event_id: eventId\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(errors => Promise.reject(errors));\n      }\n    }).then(rsvp => {\n      // if the event is the one we just rsvp'd to\n      // add a rsvp property in state and set\n      // it to the rsvp; if not, leave it as is\n      const updatedEvents = events.map(event => {\n        if (event.id === eventId) {\n          return { ...event,\n            rsvp: rsvp\n          };\n        } else {\n          return event;\n        }\n      });\n      setEvents(updatedEvents);\n    });\n  };\n\n  const createEvent = formData => {\n    return fetch(\"/events\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(formData)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(errors => Promise.reject(errors));\n      }\n    }).then(event => {\n      setEvents(events.concat(event));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(EventsList, {\n          events: events,\n          groups: groups,\n          cancelEvent: cancelEvent,\n          removeRsvpToEvent: removeRsvpToEvent,\n          rsvpToEvent: rsvpToEvent,\n          createEvent: createEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/events/:id\",\n        render: _ref => {\n          let {\n            match\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(EventDetail, {\n            eventId: match.params.id,\n            cancelEvent: cancelEvent,\n            removeRsvpToEvent: removeRsvpToEvent,\n            rsvpToEvent: rsvpToEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventsContainer, \"xXC2awV/QzktNFz+DDy8dNHKQeQ=\");\n\n_c = EventsContainer;\nexport default EventsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsContainer\");","map":{"version":3,"names":["React","useState","useEffect","Switch","Route","EventsList","EventDetail","EventsContainer","events","setEvents","groups","setGroups","fetch","credentials","then","res","json","removeRsvpToEvent","eventId","event","find","id","rsvp","method","ok","updatedEvents","map","undefined","cancelEvent","filter","rsvpToEvent","headers","body","JSON","stringify","event_id","errors","Promise","reject","createEvent","formData","concat","match","params"],"sources":["/home/braisinbran/Development/code/phase4/phase-4-church-website/frontEnd/src/components/EventsContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport EventsList from './EventsList'\nimport EventDetail from './EventDetail'\n\nfunction EventsContainer() {\n  const [events, setEvents] = useState([])\n  const [groups, setGroups] = useState([])\n  \n  useEffect(() => {\n    fetch(`/events`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(events => setEvents(events))\n    fetch(`/groups`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(groups => setGroups(groups))\n  },[])\n\n  const removeRsvpToEvent = (eventId) => {\n    const event = events.find(event => event.id === eventId)\n    return fetch(`/rsvps/${event.rsvp.id}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          // if the event is the one we just removed an rsvp \n          // for, set its rsvp property in state to \n          // undefined; If not, leave the event as it is\n          const updatedEvents = events.map((event) => {\n            if (event.id === eventId) {\n              return {\n                ...event,\n                rsvp: undefined\n              }\n            } else {\n              return event\n            }\n          })\n          setEvents(updatedEvents)\n        }\n      })\n  }\n\n  const cancelEvent = (eventId) => {\n    return fetch(`/events/${eventId}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          const updatedEvents = events.filter(event => event.id !== eventId)\n          setEvents(updatedEvents)\n        }\n      })\n  }\n  const rsvpToEvent = (eventId) => {\n    return fetch('/rsvps', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        event_id: eventId\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(rsvp => {\n        // if the event is the one we just rsvp'd to\n        // add a rsvp property in state and set\n        // it to the rsvp; if not, leave it as is\n        const updatedEvents = events.map((event) => {\n          if (event.id === eventId) {\n            return {\n              ...event,\n              rsvp: rsvp\n            }\n          } else {\n            return event\n          }\n        })\n        setEvents(updatedEvents)\n      })\n  }\n\n  const createEvent = (formData) => {\n    return fetch(\"/events\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(event => {\n        setEvents(events.concat(event))\n      })\n  }\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          exact\n          path=\"/events\"\n        >\n          <EventsList\n            events={events}\n            groups={groups}\n            cancelEvent={cancelEvent}\n            removeRsvpToEvent={removeRsvpToEvent}\n            rsvpToEvent={rsvpToEvent}\n            createEvent={createEvent}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/events/:id\"\n          render={({ match }) => {\n            return <EventDetail\n              eventId={match.params.id}\n              cancelEvent={cancelEvent}\n              removeRsvpToEvent={removeRsvpToEvent}\n              rsvpToEvent={rsvpToEvent}\n            />\n          }}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default EventsContainer"],"mappings":"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"},"metadata":{},"sourceType":"module"}